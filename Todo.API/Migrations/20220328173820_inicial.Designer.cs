// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Todo.Data.Context;

namespace Todo.API.Migrations
{
    [DbContext(typeof(TodoContext))]
    [Migration("20220328173820_inicial")]
    partial class inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Todo.Domain.Models.TodoItem", b =>
                {
                    b.Property<int>("TodoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateConclusion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateInsertion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateLastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TodoId");

                    b.HasIndex("UserId");

                    b.ToTable("todo");

                    b.HasData(
                        new
                        {
                            TodoId = 1,
                            DateInsertion = new DateTime(2022, 3, 24, 14, 38, 20, 95, DateTimeKind.Local).AddTicks(1490),
                            Deadline = new DateTime(2022, 4, 2, 14, 38, 20, 95, DateTimeKind.Local).AddTicks(9088),
                            Description = "Primeira tarefa",
                            Status = 0,
                            UserId = 2
                        },
                        new
                        {
                            TodoId = 2,
                            DateInsertion = new DateTime(2022, 3, 26, 14, 38, 20, 96, DateTimeKind.Local).AddTicks(359),
                            Deadline = new DateTime(2022, 3, 31, 14, 38, 20, 96, DateTimeKind.Local).AddTicks(373),
                            Description = "Segunda tarefa",
                            Status = 1,
                            UserId = 2
                        },
                        new
                        {
                            TodoId = 3,
                            DateInsertion = new DateTime(2022, 3, 27, 14, 38, 20, 96, DateTimeKind.Local).AddTicks(400),
                            Deadline = new DateTime(2022, 3, 29, 14, 38, 20, 96, DateTimeKind.Local).AddTicks(402),
                            Description = "Terceira tarefa",
                            Status = 2,
                            UserId = 2
                        },
                        new
                        {
                            TodoId = 4,
                            DateInsertion = new DateTime(2022, 3, 18, 14, 38, 20, 96, DateTimeKind.Local).AddTicks(404),
                            Deadline = new DateTime(2022, 3, 27, 14, 38, 20, 96, DateTimeKind.Local).AddTicks(406),
                            Description = "Quarta tarefa",
                            Status = 2,
                            UserId = 2
                        },
                        new
                        {
                            TodoId = 5,
                            DateInsertion = new DateTime(2022, 3, 19, 14, 38, 20, 96, DateTimeKind.Local).AddTicks(408),
                            Deadline = new DateTime(2022, 3, 26, 14, 38, 20, 96, DateTimeKind.Local).AddTicks(409),
                            Description = "Quinta tarefa",
                            Status = 1,
                            UserId = 2
                        },
                        new
                        {
                            TodoId = 6,
                            DateInsertion = new DateTime(2022, 3, 18, 14, 38, 20, 96, DateTimeKind.Local).AddTicks(411),
                            Deadline = new DateTime(2022, 3, 27, 14, 38, 20, 96, DateTimeKind.Local).AddTicks(413),
                            Description = "Primeira tarefa",
                            Status = 2,
                            UserId = 3
                        },
                        new
                        {
                            TodoId = 7,
                            DateInsertion = new DateTime(2022, 3, 19, 14, 38, 20, 96, DateTimeKind.Local).AddTicks(415),
                            Deadline = new DateTime(2022, 3, 26, 14, 38, 20, 96, DateTimeKind.Local).AddTicks(416),
                            Description = "Segunda tarefa",
                            Status = 1,
                            UserId = 3
                        },
                        new
                        {
                            TodoId = 8,
                            DateInsertion = new DateTime(2022, 3, 24, 14, 38, 20, 96, DateTimeKind.Local).AddTicks(418),
                            Deadline = new DateTime(2022, 4, 2, 14, 38, 20, 96, DateTimeKind.Local).AddTicks(419),
                            Description = "Terceira tarefa",
                            Status = 0,
                            UserId = 3
                        },
                        new
                        {
                            TodoId = 9,
                            DateInsertion = new DateTime(2022, 3, 28, 14, 38, 20, 96, DateTimeKind.Local).AddTicks(422),
                            Deadline = new DateTime(2022, 4, 11, 14, 38, 20, 96, DateTimeKind.Local).AddTicks(423),
                            Description = "Gerenciar a equipe",
                            Status = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Todo.Domain.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Perfil")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("user");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "admin@admin.com",
                            FullName = "Walterli Valadares Junior",
                            Password = "8D-96-9E-EF-6E-CA-D3-C2-9A-3A-62-92-80-E6-86-CF-0C-3F-5D-5A-86-AF-F3-CA-12-02-0C-92-3A-DC-6C-92",
                            Perfil = 1
                        },
                        new
                        {
                            UserId = 2,
                            Email = "teste_um@teste_um.com",
                            FullName = "Walterli Valadares Junior",
                            Password = "8D-96-9E-EF-6E-CA-D3-C2-9A-3A-62-92-80-E6-86-CF-0C-3F-5D-5A-86-AF-F3-CA-12-02-0C-92-3A-DC-6C-92",
                            Perfil = 0
                        },
                        new
                        {
                            UserId = 3,
                            Email = "teste_dois@teste_dois.com",
                            FullName = "Walterli Valadares Junior",
                            Password = "8D-96-9E-EF-6E-CA-D3-C2-9A-3A-62-92-80-E6-86-CF-0C-3F-5D-5A-86-AF-F3-CA-12-02-0C-92-3A-DC-6C-92",
                            Perfil = 0
                        });
                });

            modelBuilder.Entity("Todo.Domain.Models.TodoItem", b =>
                {
                    b.HasOne("Todo.Domain.Models.User", "User")
                        .WithMany("Todos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Todo.Domain.Models.User", b =>
                {
                    b.Navigation("Todos");
                });
#pragma warning restore 612, 618
        }
    }
}
